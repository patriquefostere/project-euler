using System.Collections.Generic;

/*The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangular number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangular number to have over five divisors.

What is the value of the first triangular number to have over five hundred divisors?*/

public class exercise12
{
	public static void Main()
	{
		int divNum = 50;//500 times out on dotnetfiddle.net
		exercise12 e = new exercise12();
	
		
		long counter =1;
		while(e.howManyDivs((counter*(counter+1))/2)<divNum){
			counter++;
		}
		long bigTri = counter*(counter+1)/2;
		
		System.Console.Write(bigTri+ " is triangular number "+counter + 
			" and has "+e.howManyDivs(bigTri)+" factors: ");
		for(int i =0;i<e.howManyDivs(bigTri);i++){
			System.Console.Write(e.divisors(bigTri)[i]+", ");
		}
	}
	
	public int howManyDivs(long tri){
		//this returns the number of divisors a number has
		exercise12 e12 = new exercise12();
		int total = (e12.divisors(tri)).Count; 
		
		return total;
	}
	
	public List<long> divisors(long tri){
		//this returns all the divisors in an array of longs

		List<long> divs = new List<long>();
		for(long i = 1;i<=tri/2;i++){
			if(tri%i==0){
				//then i is a divisor of tri
				divs.Add(i);
			}
		}
		divs.Add(tri);
		return divs;
	}
}





